[eXtended-InterNETservice-Daemon]

xinetd [슈퍼 데몬]
 ㄴ 실제 램상에 로딩하지않고 , xinetd에게 부탁하고 해당 서비스를 요청할 때, 넘겨준다.
사이즈가 작거나, 유통이 적은 데몬만 등록 [실시간 접근은 말고 가끔오는 요청들 처리해준다]
inetd -> windows, | svchost

vi /etc/inetd.conf

cd /etc/sinet.d

* xinetd를 통해 시작된 서비스 종료

* 편집기를 통해 반영 할때     

* cd /etc/xinet.d 이동 후 내부 파일 확인
    * ls

         * 예를 들어 rsync 라는 서비스의 변경을 원한다면

vi rsync
    * 다음 부분 변경

disable = yes

* 명령어 사용 할때

* chkconfig
 * 
  NetworkManager  0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  abrt-ccpp       0:해제 1:해제 2:해제 3:활성 4:해제 5:활성 6:해제
  abrtd           0:해제 1:해제 2:해제 3:활성 4:해제 5:활성 6:해제
  acpid           0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  atd             0:해제 1:해제 2:해제 3:활성 4:활성 5:활성 6:해제
  auditd          0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  autofs          0:해제 1:해제 2:해제 3:활성 4:활성 5:활성 6:해제
  blk-availability 0:해제 1:활성 2:활성 3:활성 4:활성 5:활성 6:해제
  certmonger      0:해제 1:해제 2:해제 3:활성 4:활성 5:활성 6:해제
  cgconfig        0:해제 1:해제 2:해제 3:해제 4:해제 5:해제 6:해제
  cgred           0:해제 1:해제 2:해제 3:해제 4:해제 5:해제 6:해제
  cpuspeed        0:해제 1:활성 2:활성 3:활성 4:활성 5:활성 6:해제
  crond           0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  cups            0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  dnsmasq         0:해제 1:해제 2:해제 3:해제 4:해제 5:해제 6:해제
  firestarter     0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  haldaemon       0:해제 1:해제 2:해제 3:활성 4:활성 5:활성 6:해제
  ip6tables       0:해제 1:해제 2:활성 3:활성 4:활성 5:활성 6:해제
  -----------------------------------------중략--------------------------------

* 수정
     * chkconfig --level 2345 NetworkManager off

------------------------------------------------------------------------------------------

* 실행중인 서비스 시작/중지/재시작
    * service <서비스명> <start|stop|restart>

* 실행 상태 확인
    * service <서비스명> status

* 서비스의 전체 상태 확인
    * service --status-all



[root@L1 /]# chkconfig | grep sshd
sshd           	0:해제	1:해제	2:활성	3:활성	4:활성	5:활성	6:해제

[root@L1 /]# service sshd status
openssh-daemon (pid  13599)를 실행하고 있습니다..

[root@L1 /]# service sshd stop
sshd 를 정지 중:                                           [  OK  ]


모든 서비스 상태 보기
[root@L1 /]# service --status-all > stat.txt



[root@L1 /]# chkconfig --level 5 sshd on

[root@L1 /]# chkconfig | grep sshd
sshd           	0:해제	1:해제	2:활성	3:활성	4:활성	5:활성	6:해제
[root@L1 /]# chkconfig --level 5 sshd off
sshd           	0:해제	1:해제	2:활성	3:활성	4:활성	5:해제	6:해제

[root@L1 /]# chkconfig --level 234 sshd off

[root@L1 /]# chkconfig sshd on	[2,3,4,5]
[root@L1 /]# chkconfig | grep sshd
sshd           	0:해제	1:해제	2:활성	3:활성	4:활성	5:활성	6:해제
[root@L1 /]# chkconfig sshd off	[2,3,4,5]
[root@L1 /]# chkconfig | grep sshd
sshd           	0:해제	1:해제	2:해제	3:해제	4:해제	5:해제	6:해제





-------------------------------------------------------------------
sshd 설치 / 서비스 확인 / 런레벨에 대한 실행 설정
[root@L1 /]# yum -y remove openssh

[root@L1 /]# chkconfig | grep sshd
[root@L1 /]# yum -y install openssh
[root@L1 /]# yum -y install openssh-server openssh-clients
[root@L1 /]# chkconfig | grep sshd
sshd           	0:해제	1:해제	2:활성	3:활성	4:활성	5:활성	6:해제
[root@L1 /]# service sshd status
openssh-daemon가 정지되었습니다
[root@L1 /]# chkconfig --level 24 off
[root@L1 /]# chkconfig | grep sshd
sshd           	0:해제	1:해제	2:해제	3:활성	4:해제	5:활성	6:해제




-----------------------------------------------------------------------------------------------
p.479 SSH

/etc/ssh/ssh_config


[root@L1 ~]# vi /etc/ssh/sshd_config 
 13 Port 22
 42 PermitRootLogin no


[root@L1 ~]# service iptables status
테이블: filter
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
1    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 
2    ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           
3    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           
4    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22 
5    REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
1    REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination         


iptables : Netfilter 시스템을 설정하는 핵심 명령어




리눅스 방화벽 iptables
[방화벽]

* 아래 방법으로 실제 방화벽 작업의 세부 내용을 볼수 없고 수정할 수 없다.(권장하지않음)
******************************************************************************************
 * GUI 설치
  * yum install system-config-firewall

 * CLI 환경에서 텍스트 모드 작업
  * system-config-firewall-tui
******************************************************************************************

* 방화벽 정책 출력
 * iptables -nvL

* 기본옵션

 * -A : 체인의 끝에 규칙 추가
 * -I : 체인에 추가할 규칙의 위치 지정(입력하지 않을 시 가장 위에 추가됨)
  * ex) iptables -I INPUT [위치.숫자] -p tcp --dport 8888 -j ACCEPT
 * -p : 프로토콜 지정(ex. tcp, udp)
 * -j : 액션 타겟 지정(ex. ACCEPT, DROP, REJECT)
 * -s : 소스 주소
 * -d : 목적지 주소
 * -i : 패킷이 수신되는 인터페이스 지정
 * -o : 패킷이 출발한 시스템의 인터페이스 지정
 * -m : 필터링에 대한 확장을 위한 옵션(TCP, UDP, STATE, IPRANGE, MAC..)
 * --state : 패킷의 상태 감시
 * -L : 현재 테이블 출력
  * -v : 자세히
  * -n : 호스트와 포트를 숫자로 출력(기본값은 DNS변환)
  * --line-numbers : 규칙의 고유번호 출력
 * -D : 규칙 삭제
  * ex) iptables -D INPUT 3
 * service iptables save : 현재 규칙 저장
 * service iptables start : 서비스 시작
 * service iptables stop : 서비스 중지
 * servcie iptables restart : 서비스 재시작

* 방화벽 기본정책 설정
 * iptables -P INPUT DROP
 * iptables -P OUTPUT ACCEPT

 * 발신지 주소 변경
  * iptables -t nat -A POSTROUTING -o eth0 -j SNAT --to 8.8.8.8

 * 수신지 주소 변경
  * iptables -t nat -A PREROUTING -o eth0 -j DNAT --to 168.126.63.1

* 인바운드 포트 허용
  * iptables -A INPUT -p tcp --dport 21 -j ACCEPT

 * 아웃바운드 포트 차단
  * iptables -A OUTPUT -p tcp --dport 3389 -j DROP

 * 특정 IP 차단
  * iptables -A INPUT -s 168.126.63.1/32 -j DROP

 * IP 대역 차단
  * iptables -A INPUT -m iprange --src-range 192.168.0.0/24 -j DROP
  * iptables -A INPUT -m iprange --src-range 192.168.0.15-192.168.0.35 -j DROP

* 방화벽 중지 시 반드시 save 할것.
 * service iptables save
  * save된 파일은 /etc/sysconfig/iptables 파일에 기록됨

1 # Firewall configuration written by system-config-firewall
      2 # Manual customization of this file is not recommended.
      3 *filter
      4 :INPUT DROP [0:0]
      5 :FORWARD DROP [0:0]
      6 :OUTPUT ACCEPT [0:0]
      7 -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
      8 -A INPUT -p icmp -j ACCEPT
      9 -A INPUT -i lo -j ACCEPT
     10 COMMIT

* ESTABLISHED : 자신이 요청한 작업에 대해서는 상태 추적테이블에서 방화벽 규칙을 검사하지 않고 허용
* RELATED : ESTABLISHED에서 허용한 작업과 연관된 패킷

* nmap을 이용하여 open된 포트 확인
 * nmap localhost




[레드헷 계열]
[root@L1 ~]# system-config-firewall


[root@L1 ~]# service iptables restart
iptables: 체인을 ACCEPT 규칙으로 설정 중:  filter          [  OK  ]
iptables: 방화벽 규칙을 지웁니다:                          [  OK  ]
iptables: 모듈을 언로드하는 중:                            [  OK  ]
iptables: 방화벽 규칙 적용 중:                             [  OK  ]
[root@L1 ~]# service iptables status
테이블: filter
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
1    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 
2    ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           
3    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           
4    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:53 
5    ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0           state NEW udp dpt:53 
6    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22 
7    REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
1    REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination         


vi /etc/sysconfig/iptables


!L은 제일 뒤에!
[root@L1 ~]# iptables -nvL
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 
    0     0 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0           
    0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0           
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:53 
    0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0           state NEW udp dpt:53 
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22 
  147 16506 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited 

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         




[현재 상태에 반영!]
[root@L1 ~]# iptables -I INPUT 4 -p tcp -m state --state NEW --dport 5000 -j ACCEPT
[root@L1 ~]# iptables -D 4
[root@L1 ~]# service iptables save


목적지가 80번인 것 드랍
[root@L1 ~]# iptables -I OUTPUT -p tcp --dport 80 -j DROP

















iptables

SAMBA

NFS

DNS

DHCP

[root@L1 ~]# vi /etc/ssh/sshd_config 


WINSCP
http://www.delmaster.net/210

http://www.ihd.or.kr/guidequestion.do


smbd	 : 
nmbd	 : netBIOS 이름풀이
winbindd : AD와 조인시켜주고 서비스를 실제 제공해주는 역할









